
TODO
====

Pouvoir faire suivre un tracé à un objet	<follow object="" />	avec possibilité de bouger à l'infini sur le tracé (revenir au débbut à chaque fois qu'il arrive à la fin)
Un objet de type tracé, avec des presets, comme une sinusoidale
trajectoire (type, et en fonction du type : points si c'est une multiligne, width height si c'est une sinusoidale)

Récap des attributs de chaque objet (graphe des classes, page HMTL qui donne le XML d'un objet, avec valeurs par défaut en value)
Possibilité de déplacer les objets dans un canevas

Montrer qu'on a compris le code. Exemple : en java, y'a une factory qui créé les objets, nous c'est le parser qui s'en occupe (schémas côte à côte)

Refaire le texte de création d'objet, comme dans index.html, 4. Créer ses propres objets
1. màj la dtd
2. nouvelle classe en suivant la structure des autres
3. ajouter le fichier dans les includes de animation_controller.js
3. ajouter le case dans animation_controller.js

a faire et mettre dans le main.txt :
dimensionnement de l'objet grille par rapport aux dimensions d'une case cases (et nb de col et lignes)
pour le repere, le nom des absices et ordonnées par défaut est ""

Questions
=========

Pourquoi avoir mis la valeur d'un texte dans un attribut, et sa référence (id) dans la balise ? Pas de raison particulière, on peut changer ça (+ màj DTD)
Dans cpu_anim1.xml par exemple, le premier texte qui clignotte n'est pas dans le XML ; message automatique ? Non, balise "init"
C'est quoi le @, dans des XML ? Saut de ligne

Pourquoi avoir mis un état avec une cdc plutôt qu'un boolean "waiting" ? Pour que les liens entre les "signaux" des objets soient plus clairs en codant le XML

À quoi sert l'élément extern dans la DTD ? Pour d'autres objets, tentative dont osef
fgcolor pour le polygone, l'ellipse, ... why ? La couleur de la bordure c'est fgcolor, la couleur du background c'est bgcolor, et bocolor c'est pour quoi ? on oublie fgcolor

Comment le programme java peut fonctionner pour l'exemple cpu_anim1 ? On remarque que dans ls XML l'objet ins3_decode a 3 <wait>, mais seulement 2 <trigger object="ins3_decode" le concernent
Modification apportée ligne 167

exemple_animation.xml : le polygone ne se voit pas dans l'animation ; ajout de 3 propriétés au polygone pour que ca fonctionne, lignes 28/29/30
faire ces modifs dans la version java aussi, voir si c'est mieux
